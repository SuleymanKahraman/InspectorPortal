//EntityFramework kullanýmý için gerekli configler burada yapýlmalýdýr. 
// DbContext extensiný eklendikten sonra DbContextOptionBuilder metodu bir parametreye atýlarak ConectionStringimiz yazýlýr. ConnectionString appsettings.json dosyasýnda tutulur. 
//AddCors ile cors policy için gerekli configurasyonlar yapýlýr. Fraklý originlerden istek atýlmasýna izin verilmiþ oluruz. Geliþtirme aþamasýnda yapýlacak bir þey olup daha sonra kaldýrýlmalýdýr??? 
using InspectorPortal.Data;
using Microsoft.EntityFrameworkCore;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

builder.Services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();
builder.Services.AddDbContext<InspectorPortalDbContext>(option => option.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));
builder.Services.AddCors(options => options.AddPolicy("all", pb => { pb.AllowAnyOrigin().AllowAnyHeader(); }));
var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}
app.UseCors("all");
app.UseHttpsRedirection();

app.UseAuthorization();

app.MapControllers();

app.Run();



